# -*-coding:utf-8-*-
import os
import pytest
from Aops_Web_Auto_Test.config.conf import cm
from Aops_Web_Auto_Test.page_object.vulnerability import VulnerabilityPage
from Aops_Web_Auto_Test.page_object.script_magt import ScriptManagementPage


@pytest.fixture(scope='class')
def sa(drivers) -> VulnerabilityPage:
    return VulnerabilityPage(drivers)


class TestSecurityAdvisories:

    @pytest.fixture(scope="function")
    def create_data(self):
        self.need_delete_files = []
        yield
        if self.need_delete_files:
            for file_name in self.need_delete_files:
                ScriptManagementPage.delete_test_file(file_name)

    def test_upload_sa_001_affected_zip(self, sa):
        sa.enter_cve_menu()
        sa.upload_security_advisory("valid_parse_zip.zip", affect="受影响", action='upload')
        assert sa.get_notice_text() == "上传成功"

    def test_upload_sa_002_affected_xml(self, sa):
        sa.enter_cve_menu()
        sa.upload_security_advisory("valid-sa.xml", affect="受影响", action='upload')
        assert sa.get_notice_text() == "上传成功"

    def test_upload_sa_003_empty_file(self, sa):
        sa.enter_cve_menu()
        sa.upload_security_advisory("empty.xml", affect="不受影响", action='upload')
        assert "wrong file format" in sa.get_top_right_notice_text()
        sa.upload_security_advisory("empty.zip", affect="受影响", action='upload')
        assert "wrong file format" in sa.get_top_right_notice_text()

    def test_upload_sa_004_file_permission_error(self, sa):
        sa.enter_cve_menu()
        ScriptManagementPage.copy_test_file("valid-sa.xml", "test_error_permission.xml")
        file_name = cm.BASE_DIR + '/test_data/' + "test_error_permission.xml"
        os.chmod(file_name, 000)
        self.need_delete_files = ["test_error_permission.xml"]
        sa.upload_security_advisory("test_error_permission.xml", affect="不受影响", action='upload')
        assert sa.get_notice_text() == "Network Error"

    def test_upload_sa_005_size_more_than_20m(self, sa):
        sa.enter_cve_menu()
        sa.upload_security_advisory("more_20M.zip", affect="受影响", action='upload')
        assert "wrong file format" in sa.get_top_right_notice_text()

    def test_upload_sa_006_more_than_100(self, sa):
        sa.enter_cve_menu()
        sa.upload_security_advisory("more_100.zip", affect="受影响", action='upload')
        assert "wrong file format" in sa.get_top_right_notice_text()
